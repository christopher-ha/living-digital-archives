import Head from "next/head";
import css from "styled-jsx/css";
import styles from "../styles/Home.module.css";
import { Canvas, useFrame, useLoader } from "@react-three/fiber";
import Sphere from "@/components/Sphere/Sphere.js";
import { OrbitControls } from "@react-three/drei";
import { TextureLoader } from "three/src/loaders/TextureLoader";
import { useEffect, useRef, useState } from "react";

function Home({ data }) {
  const { posts } = data.response;
  const [filteredPosts, setFilteredPosts] = useState([]);
  const sphereRef = useRef();

  useEffect(() => {
    let data = [];

    posts.map((post, i) => {
      data.push({
        key: i,
        id: post.id_string,
        timestamp: post.timestamp,
        image: post.photos[0].original_size.url,
        caption: post.caption,
        url: post.short_url,
      });
    });

    setFilteredPosts(data);
  }, [posts]);

  console.log(filteredPosts);

  return (
    <>
      <div className={styles.container}>
        <Head>
          <title>Living Digital Archives</title>
          <meta name="description" content="Generated by create next app" />
          <link rel="icon" href="/favicon.ico" />
        </Head>

        <div className={styles.scene}>
          <Canvas className={styles.canvas} shadows={true}>
            <OrbitControls />
            <ambientLight color={"white"} intensity={0.3} />
            <fog attach="fog" args={["white", 10, 75]} />
            <color attach="background" args={["white"]} />

            {/* {useFrame(() => {
              sphereRef.current.rotation.set(
                camera.rotation.x,
                camera.rotation.y,
                camera.rotation.z
              );
            })} */}

            {filteredPosts?.map((post, index) => {
              return (
                <mesh
                  key={post.id}
                  position={[
                    Math.random() * 100 - 50,
                    index * 2 - 50,
                    Math.random() * 100 - 50,
                  ]}
                  scale={5}
                  ref={sphereRef}
                >
                  <sphereBufferGeometry />
                  <meshPhysicalMaterial
                    map={new TextureLoader().load(post.image)}
                    metalness={0.2}
                    roughness={0}
                    clearcoat={0.8}
                  />
                  {/* <meshBasicMaterial
                    map={new TextureLoader().load(post.image)}
                  /> */}
                </mesh>
              );
            })}
            {/* <gridHelper />
            <axesHelper /> */}
          </Canvas>
        </div>
      </div>
    </>
  );
}

// This gets called on every request
export async function getServerSideProps() {
  // Fetch data from external API
  const res = await fetch(
    `https://api.tumblr.com/v2/blog/oneterabyteofkilobyteage.tumblr.com/posts/photo?api_key=${process.env.API_KEY}&limit=50`
  );
  const data = await res.json();

  // Pass data to the page via props
  return { props: { data } };
}

export default Home;
